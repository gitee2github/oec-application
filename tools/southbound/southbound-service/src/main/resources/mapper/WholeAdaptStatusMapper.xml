<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openeuler.southbound.mapper.adaptstatus.WholeAdaptStatusMapper">
    <select id="queryWholeFactoryNames" resultType="java.lang.String">
        select distinct(whole_factory) from `whole_factory`
    </select>

    <select id="queryWholeByFactory" resultType="com.openeuler.southbound.model.factory.WholeFactory">
        SELECT whole_factory, hardware_model, extend_model, cpu_factory, cpu_model, architecture
        FROM `whole_factory` wf LEFT JOIN cpu_factory cf ON wf.cpu_id = cf.cpu_id
        LEFT JOIN cpu_version cv on cf.cpu_id = cv.cpu_id
        LEFT JOIN version_plan vp on vp.version_id = cv.version_id
        <where>
            whole_factory = #{wholeFactory} and version_name = #{versionName}
        </where>
    </select>

    <!-- 查询是否在适配计划中-->
    <select id="queryWholeMachineModelStatusFromPlan" resultType="int">
        SELECT COUNT(*) FROM `whole_plan` wp LEFT JOIN version_plan vp ON wp.version_id= vp.version_id
        <where>
            whole_factory = #{hardwareFactory}
            and version_name=#{versionName}
            and (
            FIND_IN_SET( #{hardwareModel}, beta_list) OR FIND_IN_SET( #{hardwareModel}, release_list)
            )
        </where>
    </select>

    <!-- 查询机型是否匹配 -->
    <select id="queryWholeMachineModelStatusFromCommunity" resultType="int">
        SELECT COUNT(*) FROM `whole_community`
        <where>
            and hardware_factory = #{hardwareFactory}
            and hardware_model = #{hardwareModel}
            <if test="architecture!=null and architecture!=''">
                and architecture = #{architecture}
            </if>
            and os_version = #{versionName}
            and cpu = #{cpuModel}
        </where>
    </select>

    <!--查询整机版本是否支持 - CPU厂商 -->
    <select id="queryCpuSupportOfCpuFactory" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM
        cpu_factory cf LEFT JOIN cpu_version cv ON cf.cpu_id = cv.cpu_id
        LEFT JOIN version_plan vp ON cv.version_id = vp.version_id
        <where>
            cf.cpu_factory = #{cpuFactory}
            AND cf.cpu_model = #{cpuModel}
            AND vp.version_name = #{versionName}
        </where>
    </select>

    <select id="queryCpuFactoryNames" resultType="java.lang.String">
        select distinct(cpu_factory) from `cpu_factory`
    </select>
    <select id="queryWholeByCpuFactory" resultType="com.openeuler.southbound.model.factory.WholeFactory">
        SELECT whole_factory, hardware_model, extend_model, cpu_factory, cpu_model, architecture
        FROM `whole_factory` wf LEFT JOIN cpu_factory cf ON wf.cpu_id = cf.cpu_id
        LEFT JOIN cpu_version cv on cf.cpu_id = cv.cpu_id
        LEFT JOIN version_plan vp on vp.version_id = cv.version_id
        <where>
            cpu_factory = #{cpuFactory} and version_name = #{versionName}
        </where>
    </select>

    <!-- CPU型号-->
    <select id="queryCpuModelNames" resultType="java.lang.String">
        select distinct(cpu_model) from `cpu_factory`
    </select>
    <select id="queryWholeByCpuModel" resultType="com.openeuler.southbound.model.factory.WholeFactory">
        SELECT whole_factory, hardware_model, extend_model, cpu_factory, cpu_model, architecture
        FROM `whole_factory` wf LEFT JOIN cpu_factory cf ON wf.cpu_id = cf.cpu_id
        LEFT JOIN cpu_version cv on cf.cpu_id = cv.cpu_id
        LEFT JOIN version_plan vp on vp.version_id = cv.version_id
        <where>
            cpu_model = #{cpuModel} and version_name = #{versionName}
        </where>
    </select>

    <!--操作系统名称（操作系统版本）-->
    <select id="queryVersionName" resultType="java.lang.String">
        select distinct(version_name) from version_plan
    </select>

    <!-- 查询所有的整机-->
    <select id="queryAllWholeMachineInWholeFactory"
            resultType="com.openeuler.southbound.model.factory.WholeFactory">
        SELECT whole_factory, hardware_model, extend_model, cpu_factory, cpu_model, architecture
        FROM `whole_factory` wf LEFT JOIN cpu_factory cf ON wf.cpu_id = cf.cpu_id
        LEFT JOIN cpu_version cv on cf.cpu_id = cv.cpu_id
        LEFT JOIN version_plan vp on vp.version_id = cv.version_id
        <where>
            1 = 1
            <if test="architecture!=null and architecture!=''">
                and architecture = #{architecture}
            </if>
            <if test="versionName!=null and versionName!=''">
                and version_name = #{versionName}
            </if>
        </where>
    </select>
</mapper>