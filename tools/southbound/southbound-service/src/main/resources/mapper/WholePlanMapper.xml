<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openeuler.southbound.mapper.plan.WholePlanMapper">
    <resultMap id="BaseResultMap" type="com.openeuler.southbound.model.plan.WholePlan">
        <id property="id" column="id"/>
        <result property="wholeFactory" column="whole_factory"/>
        <result property="betaList" column="beta_list"/>
        <result property="releaseList" column="release_list"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="versionId" column="version_id"/>
        <result property="versionName" column="version_name"/>
    </resultMap>

    <!-- 查询整机计划列表 -->
    <select id="queryAll" resultMap="BaseResultMap">
        SELECT wp.*, vp.version_id,vp.version_name FROM whole_plan wp
        LEFT JOIN version_plan vp ON wp.version_id = vp.version_id
        <where>
            1 = 1
            <!-- 根据操作系统查找,操作系统可能传递多个 -->
            <if test="versionId != null and versionId != ''">
                and wp.version_id IN
                <foreach collection="versionId.split(',')" item="item" index="index" open="(" separator="," close=")">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <!-- 根据关键字keyword查找 -->
            <if test="keyword != null and keyword != ''">
                and (wp.whole_factory like concat('%', #{keyword}, '%')
                or LOCATE(#{keyword},wp.beta_list)
                or LOCATE(#{keyword},wp.release_list))
            </if>
            order by wp.create_time desc
        </where>
    </select>

    <!-- 增加整机计划 -->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.openeuler.southbound.model.plan.WholePlan">
        insert into whole_plan (whole_factory, version_id,
        beta_list, release_list, remark, create_time) values
        (#{wholeFactory}, #{versionId}, #{betaList}, #{releaseList},
        #{remark}, now())
    </insert>

    <!-- 修改整机计划 -->
    <update id="update" parameterType="com.openeuler.southbound.model.plan.WholePlan">
        update whole_plan
        <set>
            <if test="wholeFactory != null">
                `whole_factory` = #{wholeFactory,jdbcType=VARCHAR},
            </if>
            <if test="versionId != null">
                `version_id` = #{versionId,jdbcType=VARCHAR},
            </if>
            <if test="betaList != null">
                `beta_list` = #{betaList,jdbcType=VARCHAR},
            </if>
            <if test="releaseList != null">
                `release_list` = #{releaseList,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                `remark` = #{remark,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 批量删除整机计划 -->
    <delete id="deleteByIds">
        DELETE FROM whole_plan WHERE id IN
        <foreach collection="ids.split(',')" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!-- 查询beta阶段适配数量 -->
    <select id="queryBetaListCount" resultType="INTEGER">
        SELECT count(*) FROM `whole_community`
        <where>
            1 = 1 and hardware_factory = #{wholeFactory} and os_version = #{versionName}
            and hardware_model in
            <foreach collection="betaList.split(',')" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </where>
    </select>

    <!-- 查询release阶段适配数量 -->
    <select id="queryReleaseListCount" resultType="INTEGER">
        SELECT count(*) FROM `whole_community`
        <where>
            1 = 1 and hardware_factory = #{wholeFactory} and os_version = #{versionName}
            and hardware_model in
            <foreach collection="releaseList.split(',')" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </where>
    </select>

    <!-- 查询适配表格 -->
    <select id="queryModelTables"
            resultMap="com.openeuler.southbound.mapper.factory.WholeFactoryMapper.BaseResultMap">
        SELECT wf.*,cf.cpu_factory,cf.cpu_model FROM whole_factory wf
        LEFT JOIN cpu_factory cf ON wf.cpu_id = cf.cpu_id
        LEFT JOIN cpu_version cv ON cf.cpu_id=cv.cpu_id
        LEFT JOIN version_plan vp ON vp.version_id =cv.version_id
        WHERE wf.whole_factory=#{wholeFactory}
        AND vp.version_name = #{versionName}
        AND (FIND_IN_SET(#{hardwareModel},wf.hardware_model)
        OR FIND_IN_SET(#{hardwareModel},wf.extend_model))
    </select>

    <!-- 根据版本名称查询beta、release阶段机型 -->
    <select id="queryBetaModelList" resultType="java.lang.String">
        SELECT DISTINCT(wp.beta_list) AS beta_list
        FROM `whole_plan` wp LEFT JOIN `version_plan` vp ON wp.version_id = vp.version_id
        where vp.version_name = #{versionName}
    </select>
    <select id="queryReleaseModelList" resultType="java.lang.String">
        SELECT DISTINCT(wp.release_list) AS release_list
        FROM `whole_plan` wp LEFT JOIN `version_plan` vp ON wp.version_id = vp.version_id
        where vp.version_name = #{versionName}
    </select>

    <!-- 根据版本查询整机计划适配情况 -->
    <select id="queryModelStatus"
            resultMap="com.openeuler.southbound.mapper.factory.WholeFactoryMapper.BaseResultMap">
        SELECT CASE WHEN (a.hardware_model IS NULL ) THEN '0' ELSE '1' END modelStatus
        ,b.* FROM ( SELECT * FROM `whole_community` WHERE
        hardware_model = #{hardwareModel} AND os_version = #{versionName} ) a RIGHT JOIN
        (SELECT * FROM whole_factory WHERE
        hardware_model LIKE "%"#{hardwareModel}"%" OR extend_model LIKE "%"#{hardwareModel}"%") b
        ON a.hardware_factory = b.whole_factory
    </select>

    <select id="queryVersionModelList"
            resultType="com.openeuler.southbound.model.plan.WholePlan">
        SELECT GROUP_CONCAT(DISTINCT(wp.beta_list)) AS beta_list,
        GROUP_CONCAT(DISTINCT(wp.release_list)) AS release_list,vp.version_name
        FROM `whole_plan` wp LEFT JOIN `version_plan` vp
        ON wp.version_id = vp.version_id
        <where>
            <if test="versionId != null">
                FIND_IN_SET(vp.version_id, #{versionId})
            </if>
            <if test="versionName != null and versionId == null">
                FIND_IN_SET(vp.version_name, #{versionName})
            </if>
        </where>
        GROUP BY vp.version_name
    </select>

    <select id="queryModelIsSupport" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `whole_community`
        <where>
            1 = 1
            AND hardware_factory = #{wholeFactory}
            AND hardware_model = #{hardwareModel}
            AND `os_version` = #{versionName,jdbcType=VARCHAR}
            AND `cpu` = #{cpuModel,jdbcType=VARCHAR}
        </where>
        GROUP BY hardware_model
    </select>

    <select id="exportAllData" resultMap="BaseResultMap">
        SELECT wp.*, vp.version_id,vp.version_name FROM whole_plan wp
        LEFT JOIN version_plan vp ON wp.version_id = vp.version_id
        ORDER BY wp.create_time DESC
    </select>
</mapper>